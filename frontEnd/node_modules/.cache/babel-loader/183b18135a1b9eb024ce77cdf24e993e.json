{"ast":null,"code":"import _classCallCheck from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js\";\nimport React from 'react'; // import { fetchCitiesRedux } from \"../actions/cityActions\";\n\nimport { fetchProducts } from \"../actions/cityActions\";\nimport { connect } from 'react-redux';\n\nvar Cities =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cities, _React$Component);\n\n  function Cities() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cities);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cities)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.listItems = function () {\n      console.log(_this.props.cities);\n\n      var listItems = _this.props.cities.map(function (city) {\n        return React.createElement(\"div\", {\n          key: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, city.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \" \", city.country));\n      });\n\n      return listItems;\n    };\n\n    return _this;\n  }\n\n  _createClass(Cities, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchProducts());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const { error, loading, cities } = this.props;\n      // if (error) {\n      //     return <div>Error! {error.message}</div>;\n      // }\n      //\n      // if (loading) {\n      //     return <div>Loading...</div>;\n      // }\n      // const cityList = this.props.cities.map(city=><div key={city._id}>\n      //     <p>{city.name}</p>\n      // </div>);\n      return React.createElement(\"div\", {\n        className: \"contain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"City Page\"), this.listItems());\n    }\n  }]);\n\n  return Cities;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities.items,\n    loading: state.cities.loading,\n    error: state.cities.error\n  };\n};\n\nexport default connect(mapStateToProps)(Cities);","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js"],"names":["React","fetchProducts","connect","Cities","listItems","console","log","props","cities","map","city","_id","name","country","dispatch","Component","mapStateToProps","state","items","loading","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,M;;;;;;;;;;;;;;;;;;UAKFC,S,GAAY,YAAM;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWC,MAAvB;;AACA,UAAMJ,SAAS,GAAG,MAAKG,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,UAACC,IAAD;AAAA,eACpC;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAI,CAACE,IAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAKF,IAAI,CAACG,OAAV,CAFJ,CADoC;AAAA,OAAtB,CAAlB;;AAMA,aAAOT,SAAP;AACH,K;;;;;;;wCAbkB;AACf,WAAKG,KAAL,CAAWO,QAAX,CAAoBb,aAAa,EAAjC;AACH;;;6BAaQ;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA,aACA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEK,KAAKG,SAAL,EAFL,CADA;AAOH;;;;EAtCgBJ,KAAK,CAACe,S;;AA0C3B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BT,IAAAA,MAAM,EAAES,KAAK,CAACT,MAAN,CAAaU,KADS;AAE9BC,IAAAA,OAAO,EAAEF,KAAK,CAACT,MAAN,CAAaW,OAFQ;AAG9BC,IAAAA,KAAK,EAAEH,KAAK,CAACT,MAAN,CAAaY;AAHU,GAAL;AAAA,CAA7B;;AAMA,eAAelB,OAAO,CAACc,eAAD,CAAP,CAAyBb,MAAzB,CAAf","sourcesContent":["import React from 'react';\n// import { fetchCitiesRedux } from \"../actions/cityActions\";\nimport { fetchProducts } from \"../actions/cityActions\";\nimport {connect} from 'react-redux'\n\nclass Cities extends React.Component {\n    componentDidMount(){\n        this.props.dispatch(fetchProducts());\n    }\n\n    listItems = () => {\n        console.log(this.props.cities);\n        const listItems = this.props.cities.map((city) =>\n            <div key={city._id}>\n                <p>{city.name}</p>\n                <p> {city.country}</p>\n            </div>\n        );\n        return listItems;\n    };\n\n    render() {\n        // const { error, loading, cities } = this.props;\n        // if (error) {\n        //     return <div>Error! {error.message}</div>;\n        // }\n        //\n        // if (loading) {\n        //     return <div>Loading...</div>;\n        // }\n\n\n        // const cityList = this.props.cities.map(city=><div key={city._id}>\n        //     <p>{city.name}</p>\n        // </div>);\n\n        return (\n        <div className=\"contain\">\n            <p>City Page</p>\n            {this.listItems()}\n            {/*{cityList}*/}\n        </div>\n    )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    cities: state.cities.items,\n    loading: state.cities.loading,\n    error: state.cities.error\n});\n\nexport default connect(mapStateToProps)(Cities)\n"]},"metadata":{},"sourceType":"module"}