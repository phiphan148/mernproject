{"ast":null,"code":"// const initState = {\n//     cities: []\n// };\n//\n// const rootReducer = (state = initState, action) => {\n//    if(action.type === 'DELETE_POST') {\n//        let newPosts = state.posts.filter(post=> {\n//            return action.id !== post.id\n//        });\n//        return {\n//            ...state,\n//            posts: newPosts\n//        }\n//    }\n//     return state;\n// };\n// export default rootReducer;\n// const cityReducer = (state = initState, action) => {\n//     switch (action.type) {\n//         case \"FETCH_REQUEST\":\n//             return state;\n//         case \"FETCH_SUCCESS\":\n//             return {...state, cities: action.payload};\n//         default:\n//             return state;\n//     }\n// };\n//\n// export default cityReducer()\nexport default function cityReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TODO':\n      return state.concat([action.text]);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/reducers/cityReducer.js"],"names":["cityReducer","state","action","type","concat","text"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe,SAASA,WAAT,GAAyC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAOF,KAAK,CAACG,MAAN,CAAa,CAACF,MAAM,CAACG,IAAR,CAAb,CAAP;;AACJ;AACI,aAAOJ,KAAP;AAJR;AAMH","sourcesContent":["// const initState = {\n//     cities: []\n// };\n//\n// const rootReducer = (state = initState, action) => {\n//    if(action.type === 'DELETE_POST') {\n//        let newPosts = state.posts.filter(post=> {\n//            return action.id !== post.id\n//        });\n//        return {\n//            ...state,\n//            posts: newPosts\n//        }\n//    }\n//     return state;\n// };\n\n// export default rootReducer;\n// const cityReducer = (state = initState, action) => {\n//     switch (action.type) {\n//         case \"FETCH_REQUEST\":\n//             return state;\n//         case \"FETCH_SUCCESS\":\n//             return {...state, cities: action.payload};\n//         default:\n//             return state;\n//     }\n// };\n//\n// export default cityReducer()\n\nexport default function cityReducer(state = [], action) {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return state.concat([action.text])\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}