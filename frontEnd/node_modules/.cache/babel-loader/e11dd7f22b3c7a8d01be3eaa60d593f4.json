{"ast":null,"code":"import _classCallCheck from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js\";\nimport React from 'react';\nimport { fetchCitiesWithRedux as _fetchCitiesWithRedux } from \"../actions/cityActions\";\nimport { connect } from 'react-redux';\n\nvar Cities =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cities, _React$Component);\n\n  function Cities(props) {\n    var _this;\n\n    _classCallCheck(this, Cities);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cities).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        cityName: e.target.value\n      });\n    };\n\n    _this.keyPress = function (e) {\n      if (e.key === 'Enter') {\n        if (_this.state.renderCities === false) {\n          _this.setState({\n            renderCities: true\n          });\n        } else if (_this.state.cityName === '' && _this.state.renderCities === true) {\n          _this.setState({\n            renderCities: false\n          });\n        } // this.props.cities = this.props.cities.filter(city => city.name.toLocaleLowerCase().includes(this.state.cityName.toLocaleLowerCase()));\n\n      }\n    };\n\n    _this.listItems = function () {\n      var listItems;\n\n      if (_this.state.renderCities === false) {\n        listItems = _this.props.cities.map(function (city) {\n          return React.createElement(\"div\", {\n            className: \"cityPhotoHolder\",\n            key: city._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"cityName\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, city.name), React.createElement(\"img\", {\n            className: \"cityDisplay\",\n            src: city.src,\n            alt: \"img\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }));\n        });\n      } else {\n        listItems = _this.props.cities.filter(function (city) {\n          return city.name.toLocaleLowerCase().includes(_this.state.cityName.toLocaleLowerCase());\n        }).map(function (city) {\n          return React.createElement(\"div\", {\n            className: \"cityPhotoHolder\",\n            key: city._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            className: \"cityName\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, city.name), React.createElement(\"img\", {\n            className: \"cityDisplay\",\n            src: city.src,\n            alt: \"img\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }));\n        });\n      }\n\n      return listItems;\n    };\n\n    _this.state = {\n      cityName: \"\",\n      renderCities: false\n    };\n    return _this;\n  }\n\n  _createClass(Cities, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.props.dispatch(fetchCitiesWithRedux());\n      this.props.fetchCitiesWithRedux();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var searchIcoStyle = {\n        height: 17\n      };\n      return React.createElement(\"div\", {\n        className: \"contain cityDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section searchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"searchText\",\n        type: \"text\",\n        value: this.state.cityName,\n        onKeyDown: this.keyPress,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"searchIconHolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: searchIcoStyle,\n        src: require(\"../images/search-ico.png\"),\n        alt: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), this.listItems());\n    }\n  }]);\n\n  return Cities;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cityReducer.cities,\n    loading: state.cityReducer.loading,\n    error: state.cityReducer.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchCitiesWithRedux: function fetchCitiesWithRedux() {\n      dispatch(_fetchCitiesWithRedux());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js"],"names":["React","fetchCitiesWithRedux","connect","Cities","props","handleChange","e","setState","cityName","target","value","keyPress","key","state","renderCities","listItems","cities","map","city","_id","name","src","filter","toLocaleLowerCase","includes","searchIcoStyle","height","require","Component","mapStateToProps","cityReducer","loading","error","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {fetchCitiesWithRedux} from \"../actions/cityActions\";\nimport {connect} from 'react-redux';\n\nclass Cities extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cityName: \"\",\n            renderCities: false,\n        }\n    }\n\n    componentDidMount() {\n        // this.props.dispatch(fetchCitiesWithRedux());\n        this.props.fetchCitiesWithRedux();\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            cityName: e.target.value,\n        });\n    };\n\n    keyPress = (e) => {\n        if (e.key === 'Enter') {\n            if(this.state.renderCities === false){\n            this.setState({\n                renderCities: true\n            })}  else if(this.state.cityName === '' && this.state.renderCities === true) {\n                this.setState({\n                    renderCities: false\n                })\n            }\n            // this.props.cities = this.props.cities.filter(city => city.name.toLocaleLowerCase().includes(this.state.cityName.toLocaleLowerCase()));\n        }\n    };\n\n    listItems = () => {\n        let listItems;\n        if (this.state.renderCities === false) {\n            listItems = this.props.cities.map((city) =>\n                <div className=\"cityPhotoHolder\" key={city._id}>\n                    <p className=\"cityName\">{city.name}</p>\n                    <img className=\"cityDisplay\" src={city.src} alt=\"img\"/>\n                </div>\n            );\n\n        } else {\n            listItems = this.props.cities.filter(city => city.name.toLocaleLowerCase().includes(this.state.cityName.toLocaleLowerCase())).map((city) =>\n                <div className=\"cityPhotoHolder\" key={city._id}>\n                    <p className=\"cityName\">{city.name}</p>\n                    <img className=\"cityDisplay\" src={city.src} alt=\"img\"/>\n                </div>\n            );\n        }\n        return listItems;\n    };\n\n    render() {\n        const searchIcoStyle = {\n            height: 17\n        };\n        return (\n            <div className=\"contain cityDisplay\">\n                <div className=\"section searchBar\">\n                    <input id=\"searchText\" type=\"text\" value={this.state.cityName} onKeyDown={this.keyPress}\n                           onChange={this.handleChange}/>\n                    <div className=\"searchIconHolder\"><img style={searchIcoStyle}\n                                                           src={require(\"../images/search-ico.png\")} alt=\"search\"/>\n                    </div>\n                </div>\n                {this.listItems()}\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    cities: state.cityReducer.cities,\n    loading: state.cityReducer.loading,\n    error: state.cityReducer.error,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchCitiesWithRedux: () => {\n            dispatch(fetchCitiesWithRedux())\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities)\n"]},"metadata":{},"sourceType":"module"}