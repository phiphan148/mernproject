{"ast":null,"code":"import { combineReducers } from 'redux'; // import cityReducer from './cityReducer'\n\nimport cities from './cityReducer';\nvar rootReducer = combineReducers({\n  cities: cities\n});\nexport default rootReducer; // export default combineReducers({\n//     cities: cityReducer\n// })\n// const rootReducer = (state = initState, action) => {\n// switch (action.type) {\n//     case \"FETCH_REQUEST\":\n//         return state;\n//     case \"FETCH_SUCCESS\":\n//         return {...state, cities: action.payload};\n//     default:\n//         return state;\n// }\n// };\n// export default rootReducer;\n// const initState = {\n//     posts: [\n//         {id: 1, title: 'Squirtle Laid an Egg', body: 'Lorem ipsum'},\n//         {id: 2, title: 'Charmander Laid an Egg', body: 'Lorem ipsum'},\n//         {id: 3, title: 'a Helix Fossil was Found', body: 'Lorem ipsum'}\n//     ]\n// };\n//\n// const rootReducer = (state = initState, action) => {\n//    if(action.type === 'DELETE_POST') {\n//        let newPosts = state.posts.filter(post=> {\n//            return action.id !== post.id\n//        });\n//        return {\n//            ...state,\n//            posts: newPosts\n//        }\n//    }\n//     return state;\n// };\n//\n// export default rootReducer;\n//\n// const initState = {\n//     cities: []\n// };\n//\n// const rootReducer = (state = initState, action) => {\n//    if(action.type === 'DELETE_POST') {\n//        let newPosts = state.posts.filter(post=> {\n//            return action.id !== post.id\n//        });\n//        return {\n//            ...state,\n//            posts: newPosts\n//        }\n//    }\n//     return state;\n// };\n// const rootReducer = (state = initState, action) => {\n//     switch (action.type) {\n//         case \"FETCH_REQUEST\":\n//             return state;\n//         case \"FETCH_SUCCESS\":\n//             return {...state, cities: action.payload};\n//         default:\n//             return state;\n//     }\n// };\n// export default rootReducer;","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/reducers/rootReducer.js"],"names":["combineReducers","cities","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,IAAMC,WAAW,GAAGF,eAAe,CAAC;AAChCC,EAAAA,MAAM,EAANA;AADgC,CAAD,CAAnC;AAGA,eAAeC,WAAf,C,CAGA;AACA;AACA;AAEA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from 'redux'\n// import cityReducer from './cityReducer'\nimport cities from './cityReducer'\n\nconst rootReducer = combineReducers({\n    cities\n});\nexport default rootReducer;\n\n\n// export default combineReducers({\n//     cities: cityReducer\n// })\n\n// const rootReducer = (state = initState, action) => {\n    // switch (action.type) {\n    //     case \"FETCH_REQUEST\":\n    //         return state;\n    //     case \"FETCH_SUCCESS\":\n    //         return {...state, cities: action.payload};\n    //     default:\n    //         return state;\n    // }\n// };\n// export default rootReducer;\n\n\n// const initState = {\n//     posts: [\n//         {id: 1, title: 'Squirtle Laid an Egg', body: 'Lorem ipsum'},\n//         {id: 2, title: 'Charmander Laid an Egg', body: 'Lorem ipsum'},\n//         {id: 3, title: 'a Helix Fossil was Found', body: 'Lorem ipsum'}\n//     ]\n// };\n//\n// const rootReducer = (state = initState, action) => {\n//    if(action.type === 'DELETE_POST') {\n//        let newPosts = state.posts.filter(post=> {\n//            return action.id !== post.id\n//        });\n//        return {\n//            ...state,\n//            posts: newPosts\n//        }\n//    }\n//     return state;\n// };\n//\n// export default rootReducer;\n//\n// const initState = {\n//     cities: []\n// };\n//\n// const rootReducer = (state = initState, action) => {\n//    if(action.type === 'DELETE_POST') {\n//        let newPosts = state.posts.filter(post=> {\n//            return action.id !== post.id\n//        });\n//        return {\n//            ...state,\n//            posts: newPosts\n//        }\n//    }\n//     return state;\n// };\n\n\n// const rootReducer = (state = initState, action) => {\n//     switch (action.type) {\n//         case \"FETCH_REQUEST\":\n//             return state;\n//         case \"FETCH_SUCCESS\":\n//             return {...state, cities: action.payload};\n//         default:\n//             return state;\n//     }\n// };\n// export default rootReducer;\n\n"]},"metadata":{},"sourceType":"module"}