{"ast":null,"code":"import _classCallCheck from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js\";\nimport React from 'react';\nimport { fetchCities } from \"../actions/cityActions\";\nimport { connect } from 'react-redux';\n\nvar Cities =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cities, _React$Component);\n\n  function Cities() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cities);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cities)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.listItems = function () {\n      var listItems = _this.state.cityList.map(function (city) {\n        return React.createElement(\"div\", {\n          key: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, city.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \" \", city.country));\n      });\n\n      return listItems;\n    };\n\n    return _this;\n  }\n\n  _createClass(Cities, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchCities());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const { posts } = this.props;\n      // const postList = posts.map(post=><div key={post.id}>\n      //     <p>{post.title}</p>\n      // </div>)\n      return React.createElement(\"div\", {\n        className: \"contain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"City Page\"));\n    }\n  }]);\n\n  return Cities;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities.items,\n    loading: state.cities.loading,\n    error: state.cities.error\n  };\n};\n\nexport default connect(mapStateToProps)(Cities);","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js"],"names":["React","fetchCities","connect","Cities","listItems","state","cityList","map","city","_id","name","country","props","dispatch","Component","mapStateToProps","cities","items","loading","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,M;;;;;;;;;;;;;;;;;;UAKFC,S,GAAY,YAAM;AACd,UAAMA,SAAS,GAAG,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB,UAACC,IAAD;AAAA,eACtC;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAI,CAACE,IAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAKF,IAAI,CAACG,OAAV,CAFJ,CADsC;AAAA,OAAxB,CAAlB;;AAMA,aAAOP,SAAP;AACH,K;;;;;;;wCAZmB;AAChB,WAAKQ,KAAL,CAAWC,QAAX,CAAoBZ,WAAW,EAA/B;AACH;;;6BAYQ;AACL;AACA;AACA;AACA;AACA,aACA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADA;AAOH;;;;EA3BgBD,KAAK,CAACc,S;;AA8B3B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAV,KAAK;AAAA,SAAK;AAC9BW,IAAAA,MAAM,EAAEX,KAAK,CAACW,MAAN,CAAaC,KADS;AAE9BC,IAAAA,OAAO,EAAEb,KAAK,CAACW,MAAN,CAAaE,OAFQ;AAG9BC,IAAAA,KAAK,EAAEd,KAAK,CAACW,MAAN,CAAaG;AAHU,GAAL;AAAA,CAA7B;;AAMA,eAAejB,OAAO,CAACa,eAAD,CAAP,CAAyBZ,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { fetchCities } from \"../actions/cityActions\";\nimport {connect} from 'react-redux'\n\nclass Cities extends React.Component {\n    componentDidMount() {\n        this.props.dispatch(fetchCities());\n    }\n\n    listItems = () => {\n        const listItems = this.state.cityList.map((city) =>\n            <div key={city._id}>\n                <p>{city.name}</p>\n                <p> {city.country}</p>\n            </div>\n        );\n        return listItems;\n    };\n\n    render() {\n        // const { posts } = this.props;\n        // const postList = posts.map(post=><div key={post.id}>\n        //     <p>{post.title}</p>\n        // </div>)\n        return (\n        <div className=\"contain\">\n            <p>City Page</p>\n            {/*{this.listItems()}*/}\n            {/*{postList}*/}\n        </div>\n    )\n    }\n}\n\nconst mapStateToProps = state => ({\n    cities: state.cities.items,\n    loading: state.cities.loading,\n    error: state.cities.error\n});\n\nexport default connect(mapStateToProps)(Cities)\n"]},"metadata":{},"sourceType":"module"}