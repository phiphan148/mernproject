{"ast":null,"code":"import _classCallCheck from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nvar Cities =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cities, _React$Component);\n\n  function Cities(props) {\n    var _this;\n\n    _classCallCheck(this, Cities);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cities).call(this, props));\n\n    _this.fetchData = function () {\n      _this.setState({\n        isFetching: true\n      }); // fetch(\"http://localhost:5000/cities\", {\n      //     method: \"GET\",\n      //     headers: {\n      //         'Access-Control-Allow-Origin': '*',\n      //         // 'Access-Control-Allow-Credentials': false,\n      //         // 'Access-Control-Allow-Headers': 'Authorization',\n      //         // 'Content-Type': 'application/json'\n      //     },\n      //\n      // })\n      // {\n      //     mode: 'no-cors' // 'cors' by default\n      // }\n\n\n      fetch(\"http://localhost:5000/cities\", {\n        // mode: \"no-cors\",\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\"\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (result) {\n        _this.setState({\n          cityList: result,\n          isFetching: false\n        });\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    };\n\n    _this.listItems = function () {\n      var listItems = _this.state.cityList.map(function (city) {\n        return React.createElement(\"div\", {\n          key: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, city.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \" \", city.country));\n      });\n\n      return listItems;\n    };\n\n    _this.state = {\n      cityList: [],\n      isFetching: false\n    };\n    return _this;\n  }\n\n  _createClass(Cities, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n      mapStateToProps();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var posts = this.props.posts; // const postList = posts.map(post=><div key={post.id}>\n      //     <p>{post.title}</p>\n      // </div>)\n\n      return React.createElement(\"div\", {\n        className: \"contain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.listItems());\n    }\n  }]);\n\n  return Cities;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts\n  };\n};\n\nexport default connect()(Cities);","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js"],"names":["React","connect","Cities","props","fetchData","setState","isFetching","fetch","method","headers","then","response","json","result","cityList","catch","e","console","log","listItems","state","map","city","_id","name","country","mapStateToProps","posts","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,M;;;;;AACF,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;;AADe,UASnBC,SATmB,GASP,YAAM;AACd,YAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAE;AAAb,OAAd,EADc,CAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClC;AACAC,QAAAA,MAAM,EAAE,KAF0B;AAGlCC,QAAAA,OAAO,EAAE;AACL,oBAAU;AADL;AAHyB,OAAjC,CAAL,CAOKC,IAPL,CAOU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAPlB,EAQKF,IARL,CAQU,UAAAG,MAAM,EAAI;AACZ,cAAKR,QAAL,CAAc;AACVS,UAAAA,QAAQ,EAAED,MADA;AAEVP,UAAAA,UAAU,EAAE;AAFF,SAAd;AAIH,OAbL,EAcKS,KAdL,CAcW,UAAAC,CAAC;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,OAdZ;AAeH,KAvCkB;;AAAA,UA8CnBG,SA9CmB,GA8CP,YAAM;AACd,UAAMA,SAAS,GAAG,MAAKC,KAAL,CAAWN,QAAX,CAAoBO,GAApB,CAAwB,UAACC,IAAD;AAAA,eACtC;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,IAAI,CAACE,IAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAKF,IAAI,CAACG,OAAV,CAFJ,CADsC;AAAA,OAAxB,CAAlB;;AAMA,aAAON,SAAP;AACH,KAtDkB;;AAEf,UAAKC,KAAL,GAAa;AACTN,MAAAA,QAAQ,EAAE,EADD;AAETR,MAAAA,UAAU,EAAE;AAFH,KAAb;AAFe;AAMlB;;;;wCAmCmB;AAChB,WAAKF,SAAL;AACAsB,MAAAA,eAAe;AAClB;;;6BAYQ;AACLT,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AADK,UAEGwB,KAFH,GAEa,KAAKxB,KAFlB,CAEGwB,KAFH,EAGL;AACA;AACA;;AACA,aACA;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKR,SAAL,EADL,CADA;AAMH;;;;EArEgBnB,KAAK,CAAC4B,S;;AAwE3B,IAAMF,eAAe,GAAG,SAAlBA,eAAkB,CAACN,KAAD,EAAW;AAC/B,SAAO;AAACO,IAAAA,KAAK,EAAEP,KAAK,CAACO;AAAd,GAAP;AACH,CAFD;;AAIA,eAAe1B,OAAO,GAAGC,MAAH,CAAtB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux'\n\nclass Cities extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cityList: [],\n            isFetching: false\n        }\n    };\n\n\n    fetchData = () => {\n        this.setState({isFetching: true});\n        // fetch(\"http://localhost:5000/cities\", {\n        //     method: \"GET\",\n        //     headers: {\n        //         'Access-Control-Allow-Origin': '*',\n        //         // 'Access-Control-Allow-Credentials': false,\n        //         // 'Access-Control-Allow-Headers': 'Authorization',\n        //         // 'Content-Type': 'application/json'\n        //     },\n        //\n        // })\n        // {\n        //     mode: 'no-cors' // 'cors' by default\n        // }\n        fetch(\"http://localhost:5000/cities\", {\n            // mode: \"no-cors\",\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        })\n            .then(response => response.json())\n            .then(result => {\n                this.setState({\n                    cityList: result,\n                    isFetching: false\n                });\n            })\n            .catch(e => console.log(e));\n    };\n\n    componentDidMount() {\n        this.fetchData();\n        mapStateToProps();\n    }\n\n    listItems = () => {\n        const listItems = this.state.cityList.map((city) =>\n            <div key={city._id}>\n                <p>{city.name}</p>\n                <p> {city.country}</p>\n            </div>\n        );\n        return listItems;\n    };\n\n    render() {\n        console.log(this.props);\n        const { posts } = this.props;\n        // const postList = posts.map(post=><div key={post.id}>\n        //     <p>{post.title}</p>\n        // </div>)\n        return (\n        <div className=\"contain\">\n            {this.listItems()}\n            {/*{postList}*/}\n        </div>\n    )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {posts: state.posts}\n};\n\nexport default connect()(Cities)\n"]},"metadata":{},"sourceType":"module"}