{"ast":null,"code":"import _slicedToArray from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport function fetchCitiesWithRedux() {\n  return function (dispatch) {\n    dispatch(fetchCitiesBegin());\n    return fetchCities().then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          response = _ref2[0],\n          json = _ref2[1];\n\n      if (response.status === 200) {\n        dispatch(fetchCitiesSuccess(json));\n      } else {\n        dispatch(fetchCitiesFailure());\n      }\n    });\n  };\n}\n;\nexport var fetchCities = function fetchCities() {\n  var URL = \"http://localhost:5000/cities\";\n  return fetch(URL, {\n    method: 'GET'\n  }).then(function (response) {\n    return Promise.all([response, response.json()]);\n  });\n}; // Handle HTTP errors since fetch won't.\n// function handleErrors(response) {\n//     if (!response.ok) {\n//         throw Error(response.statusText);\n//     }\n//     return response;\n// }\n\nexport var fetchCitiesBegin = function fetchCitiesBegin() {\n  return {\n    type: \"FETCH_CITIES_BEGIN\"\n  };\n};\nexport var fetchCitiesSuccess = function fetchCitiesSuccess(products) {\n  return {\n    type: \"FETCH_CITIES_SUCCESS\",\n    payload: {\n      products: products\n    }\n  };\n};\nexport var fetchCitiesFailure = function fetchCitiesFailure(error) {\n  return {\n    type: \"FETCH_CITIES_FAILURE\",\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/actions/cityActions.js"],"names":["fetchCitiesWithRedux","dispatch","fetchCitiesBegin","fetchCities","then","response","json","status","fetchCitiesSuccess","fetchCitiesFailure","URL","fetch","method","Promise","all","type","products","payload","error"],"mappings":";AAAA,OAAO,SAASA,oBAAT,GAAgC;AACnC,SAAO,UAACC,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;AACA,WAAOC,WAAW,GAAGC,IAAd,CAAmB,gBAAqB;AAAA;AAAA,UAAnBC,QAAmB;AAAA,UAATC,IAAS;;AAC3C,UAAGD,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvBN,QAAAA,QAAQ,CAACO,kBAAkB,CAACF,IAAD,CAAnB,CAAR;AACH,OAFD,MAGI;AACAL,QAAAA,QAAQ,CAACQ,kBAAkB,EAAnB,CAAR;AACH;AACJ,KAPM,CAAP;AAQH,GAVD;AAWH;AAAA;AAED,OAAO,IAAMN,WAAW,GAAG,SAAdA,WAAc,GAAK;AAC5B,MAAMO,GAAG,GAAG,8BAAZ;AACA,SAAOC,KAAK,CAACD,GAAD,EAAM;AAAEE,IAAAA,MAAM,EAAE;AAAV,GAAN,CAAL,CACFR,IADE,CACI,UAAAC,QAAQ;AAAA,WAAIQ,OAAO,CAACC,GAAR,CAAY,CAACT,QAAD,EAAWA,QAAQ,CAACC,IAAT,EAAX,CAAZ,CAAJ;AAAA,GADZ,CAAP;AAEH,CAJM,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMJ,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AACnCa,IAAAA,IAAI,EAAE;AAD6B,GAAP;AAAA,CAAzB;AAIP,OAAO,IAAMP,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAQ,QAAQ;AAAA,SAAK;AAC3CD,IAAAA,IAAI,EAAE,sBADqC;AAE3CE,IAAAA,OAAO,EAAE;AAAED,MAAAA,QAAQ,EAARA;AAAF;AAFkC,GAAL;AAAA,CAAnC;AAKP,OAAO,IAAMP,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAS,KAAK;AAAA,SAAK;AACxCH,IAAAA,IAAI,EAAE,sBADkC;AAExCE,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAALA;AAAF;AAF+B,GAAL;AAAA,CAAhC","sourcesContent":["export function fetchCitiesWithRedux (){\n    return (dispatch) => {\n        dispatch(fetchCitiesBegin());\n        return fetchCities().then(([response, json]) =>{\n            if(response.status === 200){\n                dispatch(fetchCitiesSuccess(json))\n            }\n            else{\n                dispatch(fetchCitiesFailure())\n            }\n        })\n    }\n};\n\nexport const fetchCities = () =>{\n    const URL = \"http://localhost:5000/cities\";\n    return fetch(URL, { method: 'GET'})\n        .then( response => Promise.all([response, response.json()]));\n};\n\n// Handle HTTP errors since fetch won't.\n// function handleErrors(response) {\n//     if (!response.ok) {\n//         throw Error(response.statusText);\n//     }\n//     return response;\n// }\n\nexport const fetchCitiesBegin = () => ({\n    type: \"FETCH_CITIES_BEGIN\"\n});\n\nexport const fetchCitiesSuccess = products => ({\n    type: \"FETCH_CITIES_SUCCESS\",\n    payload: { products }\n});\n\nexport const fetchCitiesFailure = error => ({\n    type: \"FETCH_CITIES_FAILURE\",\n    payload: { error }\n});\n\n"]},"metadata":{},"sourceType":"module"}