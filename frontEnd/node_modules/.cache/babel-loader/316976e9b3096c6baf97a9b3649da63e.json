{"ast":null,"code":"export function fetchCities() {\n  return function (dispatch) {\n    dispatch(fetchCitiesBegin());\n    return fetch(\"http://localhost:5000/cities\").then(handleErrors).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      dispatch(fetchCitiesSuccess(json.cities));\n      return json.cities;\n    }).catch(function (error) {\n      return dispatch(fetchCitiesFailure(error));\n    });\n  };\n} // Handle HTTP errors since fetch won't.\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}\n\nexport var FETCH_CITIES_BEGIN = 'FETCH_CITIES_BEGIN';\nexport var FETCH_CITIES_SUCCESS = 'FETCH_CITIES_SUCCESS';\nexport var FETCH_CITIES_FAILURE = 'FETCH_CITIES_FAILURE';\nexport var fetchCitiesBegin = function fetchCitiesBegin() {\n  return {\n    type: FETCH_CITIES_BEGIN\n  };\n};\nexport var fetchCitiesSuccess = function fetchCitiesSuccess(cities) {\n  return {\n    type: FETCH_CITIES_SUCCESS,\n    payload: {\n      cities: cities\n    }\n  };\n};\nexport var fetchCitiesFailure = function fetchCitiesFailure(error) {\n  return {\n    type: FETCH_CITIES_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/actions/cityActions.js"],"names":["fetchCities","dispatch","fetchCitiesBegin","fetch","then","handleErrors","res","json","fetchCitiesSuccess","cities","catch","error","fetchCitiesFailure","response","ok","Error","statusText","FETCH_CITIES_BEGIN","FETCH_CITIES_SUCCESS","FETCH_CITIES_FAILURE","type","payload"],"mappings":"AAAA,OAAO,SAASA,WAAT,GAAuB;AAC1B,SAAO,UAAAC,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;AACA,WAAOC,KAAK,CAAC,8BAAD,CAAL,CACFC,IADE,CACGC,YADH,EAEFD,IAFE,CAEG,UAAAE,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAFN,EAGFH,IAHE,CAGG,UAAAG,IAAI,EAAI;AACVN,MAAAA,QAAQ,CAACO,kBAAkB,CAACD,IAAI,CAACE,MAAN,CAAnB,CAAR;AACA,aAAOF,IAAI,CAACE,MAAZ;AACH,KANE,EAOFC,KAPE,CAOI,UAAAC,KAAK;AAAA,aAAIV,QAAQ,CAACW,kBAAkB,CAACD,KAAD,CAAnB,CAAZ;AAAA,KAPT,CAAP;AAQH,GAVD;AAWH,C,CAED;;AACA,SAASN,YAAT,CAAsBQ,QAAtB,EAAgC;AAC5B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,UAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AACD,SAAOH,QAAP;AACH;;AACD,OAAO,IAAMI,kBAAkB,GAAK,oBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,IAAMC,oBAAoB,GAAG,sBAA7B;AAEP,OAAO,IAAMjB,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AACnCkB,IAAAA,IAAI,EAAEH;AAD6B,GAAP;AAAA,CAAzB;AAIP,OAAO,IAAMT,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,MAAM;AAAA,SAAK;AACzCW,IAAAA,IAAI,EAAEF,oBADmC;AAEzCG,IAAAA,OAAO,EAAE;AAAEZ,MAAAA,MAAM,EAANA;AAAF;AAFgC,GAAL;AAAA,CAAjC;AAKP,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAD,KAAK;AAAA,SAAK;AACxCS,IAAAA,IAAI,EAAED,oBADkC;AAExCE,IAAAA,OAAO,EAAE;AAAEV,MAAAA,KAAK,EAALA;AAAF;AAF+B,GAAL;AAAA,CAAhC","sourcesContent":["export function fetchCities() {\n    return dispatch => {\n        dispatch(fetchCitiesBegin());\n        return fetch(\"http://localhost:5000/cities\")\n            .then(handleErrors)\n            .then(res => res.json())\n            .then(json => {\n                dispatch(fetchCitiesSuccess(json.cities));\n                return json.cities;\n            })\n            .catch(error => dispatch(fetchCitiesFailure(error)));\n    };\n}\n\n// Handle HTTP errors since fetch won't.\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response;\n}\nexport const FETCH_CITIES_BEGIN   = 'FETCH_CITIES_BEGIN';\nexport const FETCH_CITIES_SUCCESS = 'FETCH_CITIES_SUCCESS';\nexport const FETCH_CITIES_FAILURE = 'FETCH_CITIES_FAILURE';\n\nexport const fetchCitiesBegin = () => ({\n    type: FETCH_CITIES_BEGIN\n});\n\nexport const fetchCitiesSuccess = cities => ({\n    type: FETCH_CITIES_SUCCESS,\n    payload: { cities }\n});\n\nexport const fetchCitiesFailure = error => ({\n    type: FETCH_CITIES_FAILURE,\n    payload: { error }\n});"]},"metadata":{},"sourceType":"module"}