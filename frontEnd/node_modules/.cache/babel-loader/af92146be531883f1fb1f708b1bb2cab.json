{"ast":null,"code":"import _classCallCheck from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js\";\nimport React from 'react';\nimport { fetchCitiesWithRedux } from \"../actions/cityActions\";\nimport { connect } from 'react-redux';\nimport { deletePost } from \"../actions/postActions\";\n\nvar Cities =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cities, _React$Component);\n\n  function Cities(props) {\n    var _this;\n\n    _classCallCheck(this, Cities);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cities).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        cityName: e.target.value\n      });\n\n      if (e.key === 'Enter') {\n        console.log(_this.state.cityName);\n\n        _this.props.filter(_this.state.cityName); // this.props.cities = this.props.cities.filter(city => city.name.toLocaleLowerCase().includes(this.state.cityName.toLocaleLowerCase()));\n\n      }\n    };\n\n    _this.listItems = function () {\n      var listItems = _this.props.cities.map(function (city) {\n        return React.createElement(\"div\", {\n          className: \"cityPhotoHolder\",\n          key: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"cityName\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, city.name), React.createElement(\"img\", {\n          className: \"cityDisplay\",\n          src: city.src,\n          alt: \"img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n      });\n\n      return listItems;\n    };\n\n    _this.state = {\n      cityName: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Cities, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchCitiesWithRedux());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var searchIcoStyle = {\n        height: 17\n      };\n      return React.createElement(\"div\", {\n        className: \"contain cityDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section searchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"searchText\",\n        type: \"text\",\n        value: this.state.cityName,\n        onChange: this.handleChange,\n        onKeyPress: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"searchIconHolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: searchIcoStyle,\n        src: require(\"../images/search-ico.png\"),\n        alt: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }))), this.listItems());\n    }\n  }]);\n\n  return Cities;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cityReducer.cities,\n    loading: state.cityReducer.loading,\n    error: state.cityReducer.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    filter: function filter(cityName) {\n      dispatch(filterCities(cityName));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js"],"names":["React","fetchCitiesWithRedux","connect","deletePost","Cities","props","handleChange","e","setState","cityName","target","value","key","console","log","state","filter","listItems","cities","map","city","_id","name","src","dispatch","searchIcoStyle","height","require","Component","mapStateToProps","cityReducer","loading","error","mapDispatchToProps","filterCities"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {fetchCitiesWithRedux} from \"../actions/cityActions\";\nimport {connect} from 'react-redux';\nimport {deletePost} from \"../actions/postActions\";\n\nclass Cities extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cityName: \"\"\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(fetchCitiesWithRedux());\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            cityName: e.target.value\n        });\n        if (e.key === 'Enter') {\n            console.log(this.state.cityName);\n            this.props.filter(this.state.cityName);\n            // this.props.cities = this.props.cities.filter(city => city.name.toLocaleLowerCase().includes(this.state.cityName.toLocaleLowerCase()));\n        }\n    };\n\n    listItems = () => {\n        const listItems = this.props.cities.map((city) =>\n            <div className=\"cityPhotoHolder\" key={city._id}>\n                <p className=\"cityName\">{city.name}</p>\n                <img className=\"cityDisplay\" src={city.src} alt=\"img\"/>\n            </div>\n        );\n        return listItems;\n    };\n\n    render() {\n        const searchIcoStyle = {\n            height: 17\n        };\n        return (\n            <div className=\"contain cityDisplay\">\n                <div className=\"section searchBar\">\n                    <input id=\"searchText\" type=\"text\" value={this.state.cityName} onChange={this.handleChange}\n                           onKeyPress={this.handleChange}/>\n                    <div className=\"searchIconHolder\"><img style={searchIcoStyle}\n                                                           src={require(\"../images/search-ico.png\")} alt=\"search\"/>\n                    </div>\n                </div>\n                {this.listItems()}\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    cities: state.cityReducer.cities,\n    loading: state.cityReducer.loading,\n    error: state.cityReducer.error,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        filter: (cityName) => {\n            dispatch(filterCities(cityName))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities)\n"]},"metadata":{},"sourceType":"module"}