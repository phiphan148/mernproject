{"ast":null,"code":"import _classCallCheck from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js\";\nimport React from 'react';\nimport { fetchCitiesWithRedux } from \"../actions/cityActions\";\nimport { connect } from 'react-redux';\n\nvar Cities =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cities, _React$Component);\n\n  function Cities(props) {\n    var _this;\n\n    _classCallCheck(this, Cities);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cities).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        cityName: e.target.value\n      });\n\n      if (e.key === 'Enter') {\n        console.log(_this.state.cityName);\n        console.log(_this.state.a);\n\n        _this.setState({\n          a: _this.state.a.filter(function (city) {\n            return city.name.toLocaleLowerCase().includes(_this.state.cityName.toLocaleLowerCase());\n          })\n        }); // this.props.cities = this.props.cities.filter(city => city.name.toLocaleLowerCase().includes(this.state.cityName.toLocaleLowerCase()));\n\n      }\n    };\n\n    _this.listItems = function () {\n      var listItems = _this.state.cities.map(function (city) {\n        return React.createElement(\"div\", {\n          className: \"cityPhotoHolder\",\n          key: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"cityName\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, city.name), React.createElement(\"img\", {\n          className: \"cityDisplay\",\n          src: city.src,\n          alt: \"img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }));\n      });\n\n      return listItems;\n    };\n\n    _this.state = {\n      cityName: \"\",\n      a: _this.props.cities\n    };\n    return _this;\n  }\n\n  _createClass(Cities, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchCitiesWithRedux());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var searchIcoStyle = {\n        height: 17\n      };\n      return React.createElement(\"div\", {\n        className: \"contain cityDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"section searchBar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"searchText\",\n        type: \"text\",\n        value: this.state.cityName,\n        onChange: this.handleChange,\n        onKeyPress: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"searchIconHolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: searchIcoStyle,\n        src: require(\"../images/search-ico.png\"),\n        alt: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))), this.listItems());\n    }\n  }]);\n\n  return Cities;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cityReducer.cities,\n    loading: state.cityReducer.loading,\n    error: state.cityReducer.error\n  };\n};\n\nexport default connect(mapStateToProps)(Cities);","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js"],"names":["React","fetchCitiesWithRedux","connect","Cities","props","handleChange","e","setState","cityName","target","value","key","console","log","state","a","filter","city","name","toLocaleLowerCase","includes","listItems","cities","map","_id","src","dispatch","searchIcoStyle","height","require","Component","mapStateToProps","cityReducer","loading","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {fetchCitiesWithRedux} from \"../actions/cityActions\";\nimport {connect} from 'react-redux';\n\nclass Cities extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cityName: \"\",\n            a: this.props.cities\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch(fetchCitiesWithRedux());\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            cityName: e.target.value\n        });\n        if (e.key === 'Enter') {\n            console.log(this.state.cityName);\n            console.log(this.state.a);\n            this.setState({\n                a: this.state.a.filter(city => city.name.toLocaleLowerCase().includes(this.state.cityName.toLocaleLowerCase()))\n            });\n            // this.props.cities = this.props.cities.filter(city => city.name.toLocaleLowerCase().includes(this.state.cityName.toLocaleLowerCase()));\n        }\n    };\n\n    listItems = () => {\n        const listItems = this.state.cities.map((city) =>\n            <div className=\"cityPhotoHolder\" key={city._id}>\n                <p className=\"cityName\">{city.name}</p>\n                <img className=\"cityDisplay\" src={city.src} alt=\"img\"/>\n            </div>\n        );\n        return listItems;\n    };\n\n    render() {\n        const searchIcoStyle = {\n            height: 17\n        };\n        return (\n            <div className=\"contain cityDisplay\">\n                <div className=\"section searchBar\">\n                    <input id=\"searchText\" type=\"text\" value={this.state.cityName} onChange={this.handleChange} onKeyPress={this.handleChange}/>\n                    <div className=\"searchIconHolder\"><img style={searchIcoStyle}\n                                                           src={require(\"../images/search-ico.png\")} alt=\"search\"/>\n                    </div>\n                </div>\n                {this.listItems()}\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    cities: state.cityReducer.cities,\n    loading: state.cityReducer.loading,\n    error: state.cityReducer.error,\n});\n\nexport default connect(mapStateToProps)(Cities)\n"]},"metadata":{},"sourceType":"module"}