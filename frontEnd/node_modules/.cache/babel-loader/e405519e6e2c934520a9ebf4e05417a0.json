{"ast":null,"code":"import _classCallCheck from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js\";\nimport React from 'react';\nimport { fetchCitiesWithRedux } from \"../actions/cityActions\";\nimport { connect } from 'react-redux';\nimport Filter from '../components/Filter';\n\nvar Cities =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Cities, _React$Component);\n\n  function Cities() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cities);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cities)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.filterCities = function () {\n      var cities = _this.props.cities;\n      var filteredCities = cities.filter(function (city) {\n        return city.name.includes(_this.props.cityName);\n      });\n      var a = filteredCities.map(function (city) {\n        return React.createElement(\"div\", {\n          className: \"cityPhotoHolder\",\n          key: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"cityName\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, city.name), React.createElement(\"img\", {\n          className: \"cityDisplay\",\n          src: city.src,\n          alt: \"img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }));\n      });\n      return a;\n    };\n\n    _this.listItems = function () {\n      var listItems = _this.props.cities.map(function (city) {\n        return React.createElement(\"div\", {\n          className: \"cityPhotoHolder\",\n          key: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"cityName\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, city.name), React.createElement(\"img\", {\n          className: \"cityDisplay\",\n          src: city.src,\n          alt: \"img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }));\n      });\n\n      return listItems;\n    };\n\n    return _this;\n  }\n\n  _createClass(Cities, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchCitiesWithRedux());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"contain cityDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Filter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), this.filterCities());\n    }\n  }]);\n\n  return Cities;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cityReducer.cities,\n    loading: state.cityReducer.loading,\n    error: state.cityReducer.error\n  };\n};\n\nexport default connect(mapStateToProps)(Cities);","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/views/Cities.js"],"names":["React","fetchCitiesWithRedux","connect","Filter","Cities","filterCities","cities","props","filteredCities","filter","city","name","includes","cityName","a","map","_id","src","listItems","dispatch","Component","mapStateToProps","state","cityReducer","loading","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;IAEMC,M;;;;;;;;;;;;;;;;;;UAKFC,Y,GAAe,YAAM;AACjB,UAAIC,MAAM,GAAG,MAAKC,KAAL,CAAWD,MAAxB;AACA,UAAIE,cAAc,GAAGF,MAAM,CAACG,MAAP,CAAc,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,MAAKL,KAAL,CAAWM,QAA9B,CAAV;AAAA,OAAd,CAArB;AACA,UAAMC,CAAC,GAAGN,cAAc,CAACO,GAAf,CAAmB,UAACL,IAAD;AAAA,eACzB;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,GAAG,EAAEA,IAAI,CAACM,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBN,IAAI,CAACC,IAA9B,CADJ,EAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,GAAG,EAAED,IAAI,CAACO,GAAvC;AAA4C,UAAA,GAAG,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADyB;AAAA,OAAnB,CAAV;AAMA,aAAOH,CAAP;AACH,K;;UAEDI,S,GAAY,YAAM;AACd,UAAMA,SAAS,GAAG,MAAKX,KAAL,CAAWD,MAAX,CAAkBS,GAAlB,CAAsB,UAACL,IAAD;AAAA,eACpC;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,GAAG,EAAEA,IAAI,CAACM,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBN,IAAI,CAACC,IAA9B,CADJ,EAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,GAAG,EAAED,IAAI,CAACO,GAAvC;AAA4C,UAAA,GAAG,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADoC;AAAA,OAAtB,CAAlB;;AAMA,aAAOC,SAAP;AACH,K;;;;;;;wCAxBkB;AACf,WAAKX,KAAL,CAAWY,QAAX,CAAoBlB,oBAAoB,EAAxC;AACH;;;6BAwBQ;AACL,aACA;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEK,KAAKI,YAAL,EAFL,CADA;AAMH;;;;EAlCgBL,KAAK,CAACoB,S;;AAsC3B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BhB,IAAAA,MAAM,EAAEgB,KAAK,CAACC,WAAN,CAAkBjB,MADI;AAE9BkB,IAAAA,OAAO,EAAEF,KAAK,CAACC,WAAN,CAAkBC,OAFG;AAG9BC,IAAAA,KAAK,EAAEH,KAAK,CAACC,WAAN,CAAkBE;AAHK,GAAL;AAAA,CAA7B;;AAMA,eAAevB,OAAO,CAACmB,eAAD,CAAP,CAAyBjB,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { fetchCitiesWithRedux } from \"../actions/cityActions\";\nimport {connect} from 'react-redux';\nimport Filter from '../components/Filter';\n\nclass Cities extends React.Component {\n    componentDidMount(){\n        this.props.dispatch(fetchCitiesWithRedux());\n    };\n\n    filterCities = () => {\n        let cities = this.props.cities;\n        let filteredCities = cities.filter((city) => city.name.includes(this.props.cityName));\n        const a = filteredCities.map((city) =>\n            <div className=\"cityPhotoHolder\" key={city._id}>\n                <p className=\"cityName\">{city.name}</p>\n                <img className=\"cityDisplay\" src={city.src} alt=\"img\"/>\n            </div>\n        );\n        return a;\n    };\n\n    listItems = () => {\n        const listItems = this.props.cities.map((city) =>\n            <div className=\"cityPhotoHolder\" key={city._id}>\n                <p className=\"cityName\">{city.name}</p>\n                <img className=\"cityDisplay\" src={city.src} alt=\"img\"/>\n            </div>\n        );\n        return listItems;\n    };\n\n    render() {\n        return (\n        <div className=\"contain cityDisplay\">\n            <Filter></Filter>\n            {this.filterCities()}\n        </div>\n    )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    cities: state.cityReducer.cities,\n    loading: state.cityReducer.loading,\n    error: state.cityReducer.error,\n});\n\nexport default connect(mapStateToProps)(Cities)\n"]},"metadata":{},"sourceType":"module"}