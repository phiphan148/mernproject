{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport cityReducer from \"./cityReducer\";\nimport postReducer from \"./postReducer\";\nexport default combineReducers({\n  cityReducer: cityReducer,\n  postReducer: postReducer\n}); //\n// const initState = {\n//     cities: []\n// };\n//\n// const rootReducer = (state = initState, action) => {\n//    if(action.type === 'DELETE_POST') {\n//        let newPosts = state.posts.filter(post=> {\n//            return action.id !== post.id\n//        });\n//        return {\n//            ...state,\n//            posts: newPosts\n//        }\n//    }\n//     return state;\n// };\n// const rootReducer = (state = initState, action) => {\n//     switch (action.type) {\n//         case \"FETCH_REQUEST\":\n//             return state;\n//         case \"FETCH_SUCCESS\":\n//             return {...state, cities: action.payload};\n//         default:\n//             return state;\n//     }\n// };\n// export default rootReducer;","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/reducers/rootReducer.js"],"names":["combineReducers","cityReducer","postReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAeF,eAAe,CAAC;AAC3BC,EAAAA,WAAW,EAAXA,WAD2B;AAE3BC,EAAAA,WAAW,EAAXA;AAF2B,CAAD,CAA9B,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from \"redux\";\nimport cityReducer from \"./cityReducer\";\nimport postReducer from \"./postReducer\";\n\nexport default combineReducers({\n    cityReducer,\n    postReducer\n});\n\n\n\n//\n// const initState = {\n//     cities: []\n// };\n//\n// const rootReducer = (state = initState, action) => {\n//    if(action.type === 'DELETE_POST') {\n//        let newPosts = state.posts.filter(post=> {\n//            return action.id !== post.id\n//        });\n//        return {\n//            ...state,\n//            posts: newPosts\n//        }\n//    }\n//     return state;\n// };\n\n\n// const rootReducer = (state = initState, action) => {\n//     switch (action.type) {\n//         case \"FETCH_REQUEST\":\n//             return state;\n//         case \"FETCH_SUCCESS\":\n//             return {...state, cities: action.payload};\n//         default:\n//             return state;\n//     }\n// };\n// export default rootReducer;\n\n"]},"metadata":{},"sourceType":"module"}