{"ast":null,"code":"function getCities() {\n  fetch(\"http://localhost:5000/cities\"); // .then(response => response.json())\n  // .then(result => {\n  //     this.setState({\n  //         cityList: result,\n  //         isFetching: false\n  //     })\n  // })\n  // .catch(e => console.log(e));\n}\n\nexport function fetchCities() {\n  return function (dispatch) {\n    dispatch(fetchCitiesBegin());\n    return getCities().then(function (json) {\n      dispatch(fetchCitiesSuccess(json.cities));\n      return json.cities;\n    }).catch(function (error) {\n      return dispatch(fetchCitiesFailure(error));\n    });\n  };\n} // Handle HTTP errors since fetch won't.\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}\n\nexport var FETCH_CITIES_BEGIN = \"FETCH_CITIES_BEGIN\";\nexport var FETCH_CITIES_SUCCESS = \"FETCH_CITIES_SUCCESS\";\nexport var FETCH_CITIES_FAILURE = \"FETCH_CITIES_FAILURE\";\nexport var fetchCitiesBegin = function fetchCitiesBegin() {\n  return {\n    type: FETCH_CITIES_BEGIN\n  };\n};\nexport var fetchCitiesSuccess = function fetchCitiesSuccess(cities) {\n  return {\n    type: FETCH_CITIES_SUCCESS,\n    payload: {\n      cities: cities\n    }\n  };\n};\nexport var fetchCitiesFailure = function fetchCitiesFailure(error) {\n  return {\n    type: FETCH_CITIES_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/actions/cityActions.js"],"names":["getCities","fetch","fetchCities","dispatch","fetchCitiesBegin","then","json","fetchCitiesSuccess","cities","catch","error","fetchCitiesFailure","handleErrors","response","ok","Error","statusText","FETCH_CITIES_BEGIN","FETCH_CITIES_SUCCESS","FETCH_CITIES_FAILURE","type","payload"],"mappings":"AAAA,SAASA,SAAT,GAAqB;AACjBC,EAAAA,KAAK,CAAC,8BAAD,CAAL,CADiB,CAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;;AAED,OAAO,SAASC,WAAT,GAAuB;AAC1B,SAAO,UAAAC,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;AACA,WAAOJ,SAAS,GACXK,IADE,CACG,UAAAC,IAAI,EAAI;AACVH,MAAAA,QAAQ,CAACI,kBAAkB,CAACD,IAAI,CAACE,MAAN,CAAnB,CAAR;AACA,aAAOF,IAAI,CAACE,MAAZ;AACH,KAJE,EAKFC,KALE,CAKI,UAAAC,KAAK;AAAA,aACRP,QAAQ,CAACQ,kBAAkB,CAACD,KAAD,CAAnB,CADA;AAAA,KALT,CAAP;AAQH,GAVD;AAWH,C,CAED;;AACA,SAASE,YAAT,CAAsBC,QAAtB,EAAgC;AAC5B,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,UAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AACD,SAAOH,QAAP;AACH;;AAED,OAAO,IAAMI,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,oBAAoB,GAC7B,sBADG;AAEP,OAAO,IAAMC,oBAAoB,GAC7B,sBADG;AAGP,OAAO,IAAMf,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AACnCgB,IAAAA,IAAI,EAAEH;AAD6B,GAAP;AAAA,CAAzB;AAIP,OAAO,IAAMV,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,MAAM;AAAA,SAAK;AACzCY,IAAAA,IAAI,EAAEF,oBADmC;AAEzCG,IAAAA,OAAO,EAAE;AAAEb,MAAAA,MAAM,EAANA;AAAF;AAFgC,GAAL;AAAA,CAAjC;AAKP,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAD,KAAK;AAAA,SAAK;AACxCU,IAAAA,IAAI,EAAED,oBADkC;AAExCE,IAAAA,OAAO,EAAE;AAAEX,MAAAA,KAAK,EAALA;AAAF;AAF+B,GAAL;AAAA,CAAhC","sourcesContent":["function getCities() {\n    fetch(\"http://localhost:5000/cities\")\n        // .then(response => response.json())\n        // .then(result => {\n        //     this.setState({\n        //         cityList: result,\n        //         isFetching: false\n        //     })\n        // })\n        // .catch(e => console.log(e));\n}\n\nexport function fetchCities() {\n    return dispatch => {\n        dispatch(fetchCitiesBegin());\n        return getCities()\n            .then(json => {\n                dispatch(fetchCitiesSuccess(json.cities));\n                return json.cities;\n            })\n            .catch(error =>\n                dispatch(fetchCitiesFailure(error))\n            );\n    };\n}\n\n// Handle HTTP errors since fetch won't.\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response;\n}\n\nexport const FETCH_CITIES_BEGIN = \"FETCH_CITIES_BEGIN\";\nexport const FETCH_CITIES_SUCCESS =\n    \"FETCH_CITIES_SUCCESS\";\nexport const FETCH_CITIES_FAILURE =\n    \"FETCH_CITIES_FAILURE\";\n\nexport const fetchCitiesBegin = () => ({\n    type: FETCH_CITIES_BEGIN\n});\n\nexport const fetchCitiesSuccess = cities => ({\n    type: FETCH_CITIES_SUCCESS,\n    payload: { cities }\n});\n\nexport const fetchCitiesFailure = error => ({\n    type: FETCH_CITIES_FAILURE,\n    payload: { error }\n});\n"]},"metadata":{},"sourceType":"module"}