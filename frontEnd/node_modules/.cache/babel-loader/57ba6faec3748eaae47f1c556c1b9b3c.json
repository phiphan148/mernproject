{"ast":null,"code":"import { combineReducers } from 'redux';\nimport cityReducer from './cityReducer';\nimport defaultState, { firstNamedReducer, secondNamedReducer as secondState } from './reducers';\nvar rootReducer = combineReducers({\n  defaultState: defaultState,\n  // key name same as the carefully renamed default export\n  firstState: firstNamedReducer,\n  // specific key name instead of the variable name\n  secondState: secondState // key name same as the carefully renamed named export\n\n});\nexport default combineReducers({\n  cities: cityReducer\n}); // const rootReducer = (state = initState, action) => {\n// switch (action.type) {\n//     case \"FETCH_REQUEST\":\n//         return state;\n//     case \"FETCH_SUCCESS\":\n//         return {...state, cities: action.payload};\n//     default:\n//         return state;\n// }\n// };\n// export default rootReducer;\n// const initState = {\n//     posts: [\n//         {id: 1, title: 'Squirtle Laid an Egg', body: 'Lorem ipsum'},\n//         {id: 2, title: 'Charmander Laid an Egg', body: 'Lorem ipsum'},\n//         {id: 3, title: 'a Helix Fossil was Found', body: 'Lorem ipsum'}\n//     ]\n// };\n//\n// const rootReducer = (state = initState, action) => {\n//    if(action.type === 'DELETE_POST') {\n//        let newPosts = state.posts.filter(post=> {\n//            return action.id !== post.id\n//        });\n//        return {\n//            ...state,\n//            posts: newPosts\n//        }\n//    }\n//     return state;\n// };\n//\n// export default rootReducer;\n//\n// const initState = {\n//     cities: []\n// };\n//\n// const rootReducer = (state = initState, action) => {\n//    if(action.type === 'DELETE_POST') {\n//        let newPosts = state.posts.filter(post=> {\n//            return action.id !== post.id\n//        });\n//        return {\n//            ...state,\n//            posts: newPosts\n//        }\n//    }\n//     return state;\n// };\n// const rootReducer = (state = initState, action) => {\n//     switch (action.type) {\n//         case \"FETCH_REQUEST\":\n//             return state;\n//         case \"FETCH_SUCCESS\":\n//             return {...state, cities: action.payload};\n//         default:\n//             return state;\n//     }\n// };\n// export default rootReducer;","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/reducers/rootReducer.js"],"names":["combineReducers","cityReducer","defaultState","firstNamedReducer","secondNamedReducer","secondState","rootReducer","firstState","cities"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,IACIC,iBADJ,EAEIC,kBAAkB,IAAIC,WAF1B,QAGO,YAHP;AAKA,IAAMC,WAAW,GAAGN,eAAe,CAAC;AAChCE,EAAAA,YAAY,EAAZA,YADgC;AAClB;AACdK,EAAAA,UAAU,EAAEJ,iBAFoB;AAED;AAC/BE,EAAAA,WAAW,EAAXA,WAHgC,CAGpB;;AAHoB,CAAD,CAAnC;AAOA,eAAeL,eAAe,CAAC;AAC3BQ,EAAAA,MAAM,EAAEP;AADmB,CAAD,CAA9B,C,CAIA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from 'redux'\nimport cityReducer from './cityReducer'\nimport defaultState, {\n    firstNamedReducer,\n    secondNamedReducer as secondState\n} from './reducers'\n\nconst rootReducer = combineReducers({\n    defaultState, // key name same as the carefully renamed default export\n    firstState: firstNamedReducer, // specific key name instead of the variable name\n    secondState // key name same as the carefully renamed named export\n})\n\n\nexport default combineReducers({\n    cities: cityReducer\n})\n\n// const rootReducer = (state = initState, action) => {\n    // switch (action.type) {\n    //     case \"FETCH_REQUEST\":\n    //         return state;\n    //     case \"FETCH_SUCCESS\":\n    //         return {...state, cities: action.payload};\n    //     default:\n    //         return state;\n    // }\n// };\n// export default rootReducer;\n\n\n// const initState = {\n//     posts: [\n//         {id: 1, title: 'Squirtle Laid an Egg', body: 'Lorem ipsum'},\n//         {id: 2, title: 'Charmander Laid an Egg', body: 'Lorem ipsum'},\n//         {id: 3, title: 'a Helix Fossil was Found', body: 'Lorem ipsum'}\n//     ]\n// };\n//\n// const rootReducer = (state = initState, action) => {\n//    if(action.type === 'DELETE_POST') {\n//        let newPosts = state.posts.filter(post=> {\n//            return action.id !== post.id\n//        });\n//        return {\n//            ...state,\n//            posts: newPosts\n//        }\n//    }\n//     return state;\n// };\n//\n// export default rootReducer;\n//\n// const initState = {\n//     cities: []\n// };\n//\n// const rootReducer = (state = initState, action) => {\n//    if(action.type === 'DELETE_POST') {\n//        let newPosts = state.posts.filter(post=> {\n//            return action.id !== post.id\n//        });\n//        return {\n//            ...state,\n//            posts: newPosts\n//        }\n//    }\n//     return state;\n// };\n\n\n// const rootReducer = (state = initState, action) => {\n//     switch (action.type) {\n//         case \"FETCH_REQUEST\":\n//             return state;\n//         case \"FETCH_SUCCESS\":\n//             return {...state, cities: action.payload};\n//         default:\n//             return state;\n//     }\n// };\n// export default rootReducer;\n\n"]},"metadata":{},"sourceType":"module"}