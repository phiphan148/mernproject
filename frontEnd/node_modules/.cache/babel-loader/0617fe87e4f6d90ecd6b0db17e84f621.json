{"ast":null,"code":"function getCities() {\n  fetch(\"http://localhost:5000/cities\").then(function (response) {\n    return response.json();\n  }).catch(function (e) {\n    return console.log(e);\n  });\n}\n\nexport function fetchCities() {\n  return function (dispatch) {\n    dispatch(fetchCitiesBegin());\n    return fetch(\"http://localhost:5000/cities\").then(function (json) {\n      dispatch(fetchCitiesSuccess(json.cities));\n      return json.cities;\n    }).catch(function (error) {\n      return dispatch(fetchCitiesFailure(error));\n    });\n  };\n} // Handle HTTP errors since fetch won't.\n// function handleErrors(response) {\n//     if (!response.ok) {\n//         throw Error(response.statusText);\n//     }\n//     return response;\n// }\n\nexport var FETCH_CITIES_BEGIN = \"FETCH_CITIES_BEGIN\";\nexport var FETCH_CITIES_SUCCESS = \"FETCH_CITIES_SUCCESS\";\nexport var FETCH_CITIES_FAILURE = \"FETCH_CITIES_FAILURE\";\nexport var fetchCitiesBegin = function fetchCitiesBegin() {\n  return {\n    type: FETCH_CITIES_BEGIN\n  };\n};\nexport var fetchCitiesSuccess = function fetchCitiesSuccess(cities) {\n  return {\n    type: FETCH_CITIES_SUCCESS,\n    payload: {\n      cities: cities\n    }\n  };\n};\nexport var fetchCitiesFailure = function fetchCitiesFailure(error) {\n  return {\n    type: FETCH_CITIES_FAILURE,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["/Users/PhiPhan/Documents/Ubiqum/reactjs/mernproject/frontEnd/src/actions/cityActions.js"],"names":["getCities","fetch","then","response","json","catch","e","console","log","fetchCities","dispatch","fetchCitiesBegin","fetchCitiesSuccess","cities","error","fetchCitiesFailure","FETCH_CITIES_BEGIN","FETCH_CITIES_SUCCESS","FETCH_CITIES_FAILURE","type","payload"],"mappings":"AAAA,SAASA,SAAT,GAAqB;AACjBC,EAAAA,KAAK,CAAC,8BAAD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GADlB,EAEKC,KAFL,CAEW,UAAAC,CAAC;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,GAFZ;AAGH;;AAED,OAAO,SAASG,WAAT,GAAuB;AAC1B,SAAO,UAAAC,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;AACA,WAAOV,KAAK,CAAC,8BAAD,CAAL,CACFC,IADE,CACG,UAAAE,IAAI,EAAI;AACVM,MAAAA,QAAQ,CAACE,kBAAkB,CAACR,IAAI,CAACS,MAAN,CAAnB,CAAR;AACA,aAAOT,IAAI,CAACS,MAAZ;AACH,KAJE,EAKFR,KALE,CAKI,UAAAS,KAAK;AAAA,aACRJ,QAAQ,CAACK,kBAAkB,CAACD,KAAD,CAAnB,CADA;AAAA,KALT,CAAP;AAQH,GAVD;AAWH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAME,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,oBAAoB,GAC7B,sBADG;AAEP,OAAO,IAAMC,oBAAoB,GAC7B,sBADG;AAGP,OAAO,IAAMP,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AACnCQ,IAAAA,IAAI,EAAEH;AAD6B,GAAP;AAAA,CAAzB;AAIP,OAAO,IAAMJ,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,MAAM;AAAA,SAAK;AACzCM,IAAAA,IAAI,EAAEF,oBADmC;AAEzCG,IAAAA,OAAO,EAAE;AAAEP,MAAAA,MAAM,EAANA;AAAF;AAFgC,GAAL;AAAA,CAAjC;AAKP,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAD,KAAK;AAAA,SAAK;AACxCK,IAAAA,IAAI,EAAED,oBADkC;AAExCE,IAAAA,OAAO,EAAE;AAAEN,MAAAA,KAAK,EAALA;AAAF;AAF+B,GAAL;AAAA,CAAhC","sourcesContent":["function getCities() {\n    fetch(\"http://localhost:5000/cities\")\n        .then(response => response.json())\n        .catch(e => console.log(e));\n}\n\nexport function fetchCities() {\n    return dispatch => {\n        dispatch(fetchCitiesBegin());\n        return fetch(\"http://localhost:5000/cities\")\n            .then(json => {\n                dispatch(fetchCitiesSuccess(json.cities));\n                return json.cities;\n            })\n            .catch(error =>\n                dispatch(fetchCitiesFailure(error))\n            );\n    };\n}\n\n// Handle HTTP errors since fetch won't.\n// function handleErrors(response) {\n//     if (!response.ok) {\n//         throw Error(response.statusText);\n//     }\n//     return response;\n// }\n\nexport const FETCH_CITIES_BEGIN = \"FETCH_CITIES_BEGIN\";\nexport const FETCH_CITIES_SUCCESS =\n    \"FETCH_CITIES_SUCCESS\";\nexport const FETCH_CITIES_FAILURE =\n    \"FETCH_CITIES_FAILURE\";\n\nexport const fetchCitiesBegin = () => ({\n    type: FETCH_CITIES_BEGIN\n});\n\nexport const fetchCitiesSuccess = cities => ({\n    type: FETCH_CITIES_SUCCESS,\n    payload: { cities }\n});\n\nexport const fetchCitiesFailure = error => ({\n    type: FETCH_CITIES_FAILURE,\n    payload: { error }\n});\n"]},"metadata":{},"sourceType":"module"}